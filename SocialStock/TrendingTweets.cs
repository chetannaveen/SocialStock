// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//
//    var trendingTweets = TrendingTweets.FromJson(jsonString);

namespace SocialStock.Tweets
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TrendingTweets
    {
        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public Meta Meta { get; set; }

        [JsonProperty("posts", NullValueHandling = NullValueHandling.Ignore)]
        public Post[] Posts { get; set; }
    }

    public partial class Meta
    {
        [JsonProperty("http_code", NullValueHandling = NullValueHandling.Ignore)]
        public long? HttpCode { get; set; }

        [JsonProperty("network", NullValueHandling = NullValueHandling.Ignore)]
        public string Network { get; set; }

        [JsonProperty("query_type", NullValueHandling = NullValueHandling.Ignore)]
        public string QueryType { get; set; }
    }

    public partial class Post
    {
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("lang", NullValueHandling = NullValueHandling.Ignore)]
        public string Lang { get; set; }

        [JsonProperty("sentiment", NullValueHandling = NullValueHandling.Ignore)]
        public string Sentiment { get; set; }

        [JsonProperty("network", NullValueHandling = NullValueHandling.Ignore)]
        public string Network { get; set; }

        [JsonProperty("postid", NullValueHandling = NullValueHandling.Ignore)]
        public string Postid { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
        public User User { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public Tag[] Tags { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Image { get; set; }

        [JsonProperty("popularity", NullValueHandling = NullValueHandling.Ignore)]
        public Popularity[] Popularity { get; set; }

        [JsonProperty("user_mentions", NullValueHandling = NullValueHandling.Ignore)]
        public Tag[] UserMentions { get; set; }

        [JsonProperty("posted", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Posted { get; set; }

        [JsonProperty("urls", NullValueHandling = NullValueHandling.Ignore)]
        public Url[] Urls { get; set; }

        [JsonProperty("place")]
        public object Place { get; set; }
    }

    public partial class Popularity
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
        public long? Count { get; set; }
    }

    public partial class Tag
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }
    }

    public partial class Url
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri UrlUrl { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("short_url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri ShortUrl { get; set; }
    }

    public partial class User
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public string Userid { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Image { get; set; }

        [JsonProperty("location", NullValueHandling = NullValueHandling.Ignore)]
        public string Location { get; set; }

        [JsonProperty("influence", NullValueHandling = NullValueHandling.Ignore)]
        public Popularity Influence { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }
    }

    public partial class TrendingTweets
    {
        public static TrendingTweets FromJson(string trendingTweets) => JsonConvert.DeserializeObject<TrendingTweets>(trendingTweets, SocialStock.Tweets.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this TrendingTweets self) => JsonConvert.SerializeObject(self, SocialStock.Tweets.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
