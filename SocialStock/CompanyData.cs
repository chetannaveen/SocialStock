// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//
//    var companyData = CompanyData.FromJson(jsonString);

namespace SocialStock.BasicCompanyInfo
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class CompanyData
    {
        [JsonProperty("country", NullValueHandling = NullValueHandling.Ignore)]
        public string Country { get; set; }

        [JsonProperty("currency", NullValueHandling = NullValueHandling.Ignore)]
        public string Currency { get; set; }

        [JsonProperty("exchange", NullValueHandling = NullValueHandling.Ignore)]
        public string Exchange { get; set; }

        [JsonProperty("finnhubIndustry", NullValueHandling = NullValueHandling.Ignore)]
        public string FinnhubIndustry { get; set; }

        [JsonProperty("ipo", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Ipo { get; set; }

        [JsonProperty("logo", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Logo { get; set; }

        [JsonProperty("marketCapitalization", NullValueHandling = NullValueHandling.Ignore)]
        public double? MarketCapitalization { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("phone", NullValueHandling = NullValueHandling.Ignore)]
        public string Phone { get; set; }

        [JsonProperty("shareOutstanding", NullValueHandling = NullValueHandling.Ignore)]
        public double? ShareOutstanding { get; set; }

        [JsonProperty("ticker", NullValueHandling = NullValueHandling.Ignore)]
        public string Ticker { get; set; }

        [JsonProperty("weburl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Weburl { get; set; }
    }

    public partial class CompanyData
    {
        public static CompanyData FromJson(string json) => JsonConvert.DeserializeObject<CompanyData>(json, SocialStock.BasicCompanyInfo.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this CompanyData self) => JsonConvert.SerializeObject(self, SocialStock.BasicCompanyInfo.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
